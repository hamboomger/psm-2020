[{"/Users/hamboomger/work/uni/psm/psm-6/src/index.tsx":"1","/Users/hamboomger/work/uni/psm/psm-6/src/reportWebVitals.ts":"2","/Users/hamboomger/work/uni/psm/psm-6/src/App.tsx":"3","/Users/hamboomger/work/uni/psm/psm-6/src/components/Pendulum.tsx":"4","/Users/hamboomger/work/uni/psm/psm-6/src/components/StartButton.tsx":"5","/Users/hamboomger/work/uni/psm/psm-6/src/lib/pendulumFunctions.ts":"6","/Users/hamboomger/work/uni/psm/psm-6/src/components/Plot.tsx":"7","/Users/hamboomger/work/uni/psm/psm-6/src/lib/AppState.ts":"8","/Users/hamboomger/work/uni/psm/psm-6/src/components/plotting/PhaseSpacePlot.tsx":"9","/Users/hamboomger/work/uni/psm/psm-6/src/components/plotting/D3PlotBuilder.ts":"10","/Users/hamboomger/work/uni/psm/psm-6/src/lib/config.ts":"11","/Users/hamboomger/work/uni/psm/psm-6/src/components/plotting/PhaseSpaceDataObservable.ts":"12"},{"size":528,"mtime":1611596060348,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1612116094332,"results":"15","hashOfConfig":"14"},{"size":847,"mtime":1612520239925,"results":"16","hashOfConfig":"14"},{"size":2893,"mtime":1612518619236,"results":"17","hashOfConfig":"14"},{"size":1245,"mtime":1612183231774,"results":"18","hashOfConfig":"14"},{"size":2060,"mtime":1612365022300,"results":"19","hashOfConfig":"14"},{"size":1595,"mtime":1612193276946,"results":"20","hashOfConfig":"21"},{"size":664,"mtime":1612369484740,"results":"22","hashOfConfig":"14"},{"size":1981,"mtime":1612517536379,"results":"23","hashOfConfig":"14"},{"size":3809,"mtime":1612517536448,"results":"24","hashOfConfig":"14"},{"size":85,"mtime":1612518427190,"results":"25","hashOfConfig":"14"},{"size":1670,"mtime":1612517536476,"results":"26","hashOfConfig":"14"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"nicvw5",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},"ugpkvh",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/hamboomger/work/uni/psm/psm-6/src/index.tsx",[],["55","56"],"/Users/hamboomger/work/uni/psm/psm-6/src/reportWebVitals.ts",[],"/Users/hamboomger/work/uni/psm/psm-6/src/App.tsx",["57"],"/Users/hamboomger/work/uni/psm/psm-6/src/components/Pendulum.tsx",["58","59"],"/Users/hamboomger/work/uni/psm/psm-6/src/components/StartButton.tsx",[],"/Users/hamboomger/work/uni/psm/psm-6/src/lib/pendulumFunctions.ts",[],"/Users/hamboomger/work/uni/psm/psm-6/src/components/Plot.tsx",["60","61"],"import React, {useEffect, useState} from \"react\";\nimport {CartesianGrid, Line, LineChart, XAxis, YAxis} from \"recharts\";\nimport {AppParametersStore, PendulumStore} from \"../lib/AppState\";\nimport {pendulum, PhaseSpace, PhaseSpaceParams} from \"../lib/pendulumFunctions\";\n\ninterface Props {\n  plotHeight: number,\n  plotWidth: number,\n}\n\nfunction phaseSpaceToData(phaseSpace: PhaseSpace): { x: number, y: number, value: number }[] {\n  return phaseSpace.map(ps => {\n    const [, coord,] = ps;\n    return { x: coord[0], y: coord[1], value: 1};\n  });\n}\n\nconst Plot: React.FC<Props> = ({ plotHeight, plotWidth }) => {\n  const { animationStarted, pendCoords, pivotCoords } = PendulumStore.useState();\n  const params = AppParametersStore.useState();\n  const [data, setData] = useState<any[]>([]);\n  useEffect(() => {\n    if (animationStarted) {\n      const theta = pendulum.theta(pivotCoords, pendCoords, 'rad');\n      const L = pendulum.getStringLength(pivotCoords, pendCoords);\n      const phaseSpace = pendulum.phaseSpace(theta, L, params);\n      const newData = phaseSpaceToData(phaseSpace);\n      setData(newData);\n    }\n  }, [animationStarted, pendCoords]);\n\n  console.log('Animation started: ' + animationStarted);\n  return (\n    <div id=\"phaseSpaceChart\">\n      <LineChart width={plotWidth} height={plotHeight} data={data}>\n        <XAxis dataKey=\"x\" label={'&#775;θ'}/>\n        <YAxis dataKey=\"y\" label={'θ'}/>\n        <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\"/>\n        <Line type=\"monotone\" points={data} stroke=\"#8884d8\" />\n      </LineChart>\n    </div>\n  )\n}\n\nexport default Plot;\n",["62","63"],"/Users/hamboomger/work/uni/psm/psm-6/src/lib/AppState.ts",[],"/Users/hamboomger/work/uni/psm/psm-6/src/components/plotting/PhaseSpacePlot.tsx",[],"/Users/hamboomger/work/uni/psm/psm-6/src/components/plotting/D3PlotBuilder.ts",["64","65","66","67"],"import * as d3 from \"d3\";\nimport './plot.css';\nimport {PhaseSpaceDataObservable, PSDSubscriber} from \"./PhaseSpaceDataObservable\";\nimport {PhaseSpace} from \"../../lib/pendulumFunctions\";\n\nexport type DataElem = { t: number, theta: number, dotTheta: number }\nexport type PlotData = Array<DataElem>;\n\nexport class D3PlotBuilder {\n  private padding = 20;\n  private width: number;\n  private height: number;\n  private innerWidth: number;\n  private innerHeight: number;\n\n  private readonly ref: SVGSVGElement;\n  private selection?: d3.Selection<SVGGElement, unknown, null, undefined>\n\n  constructor(width: number, height: number, svgRef: SVGSVGElement) {\n    this.width = width;\n    this.height = height;\n    this.ref = svgRef;\n\n    this.innerWidth = width - this.padding*2;\n    this.innerHeight = height - this.padding*2;\n  }\n\n  drawPlotLine(patchNumber: number, phaseSpace: PhaseSpace) {\n    const data: PlotData = phaseSpace.map(d => {\n      const [t, [theta, dotTheta]] = d;\n      return { t, theta, dotTheta };\n    });\n\n    const xValRangeRad = Math.PI / 2;\n    const yValRangeRad = Math.PI / 8;\n    const xValue = (d: DataElem) => d.theta;\n    const yValue = (d: DataElem) => d.dotTheta;\n\n    const xScale = d3.scaleLinear()\n      .domain([-xValRangeRad, xValRangeRad])\n      .range([0, this.innerWidth])\n      .nice();\n\n    const yScale = d3.scaleLinear()\n      .domain([-yValRangeRad, yValRangeRad])\n      .range([0, this.innerHeight])\n      .nice();\n\n    const lineGen = d3.line<DataElem>()\n      .x(d => xScale(xValue(d)))\n      .y(d => yScale(yValue(d)))\n      .curve(d3.curveNatural);\n\n    var path = this.selection!.append(\"path\")\n      .attr(\"d\", lineGen(data)!)\n      .attr(\"stroke\", \"darkgrey\")\n      .attr(\"stroke-width\", \"2\")\n      .attr(\"fill\", \"none\");\n\n    var totalLength = path.node()!.getTotalLength();\n\n    path\n      .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n      .attr(\"stroke-dashoffset\", totalLength)\n      // .attr('class', 'plot-line')\n      .transition()\n      .duration(1000)\n      .ease(d3.easeLinear)\n      .attr(\"stroke-dashoffset\", 1)\n  }\n\n  buildPlotPlane() {\n    const svg = d3.select(this.ref);\n\n    const xValRangeRad = Math.PI / 2;\n    const yValRangeRad = Math.PI / 8;\n    const xValue = (d: DataElem) => d.theta;\n    const yValue = (d: DataElem) => d.dotTheta;\n\n    const xScale = d3.scaleLinear()\n      .domain([-xValRangeRad, xValRangeRad])\n      .range([0, this.innerWidth])\n      .nice();\n\n    const yScale = d3.scaleLinear()\n      .domain([-yValRangeRad, yValRangeRad])\n      .range([0, this.innerHeight])\n      .nice();\n\n    this.selection = svg.append('g')\n      .attr('transform', `translate(${this.padding}, ${this.padding})`)\n\n    const xAxis = d3.axisBottom(xScale)\n      .tickSize(-this.innerHeight)\n      .tickFormat(formatToPi);\n\n    const yAxis = d3.axisLeft(yScale)\n      .tickSize(-this.innerWidth)\n      .tickFormat(formatToPi);\n\n    const yAxisG = this.selection.append('g').call(yAxis)\n      .attr('transform', `translate(${this.innerWidth / 2}, 0)`);\n\n    const xAxisG = this.selection.append('g').call(xAxis)\n      .attr('transform', `translate(0, ${this.innerHeight / 2})`);\n\n    yAxisG.append('text')\n      .attr('fill', 'black')\n      .attr('x', '45')\n      .attr('y', '5')\n      .text('theta dot');\n\n    yAxisG.selectAll(\".tick line\")\n      .attr('class', 'plot-tick')\n      .attr(\"x1\", (this.width - (2 * this.padding)) / 2 * -1)\n      .attr(\"x2\", (this.width - (2 * this.padding)) / 2);\n\n    xAxisG.selectAll(\".tick line\")\n      .attr('class', 'plot-tick')\n      .attr(\"y1\", (this.width - (2 * this.padding)) / 2 * -1)\n      .attr(\"y2\", (this.width - (2 * this.padding)) / 2);\n  }\n}\n\nfunction formatToPi(value: d3.NumberValue): string {\n  const valInPi = value.valueOf() / Math.PI;\n  return `${valInPi.toFixed(2)} \\u03c0`;\n}\n","/Users/hamboomger/work/uni/psm/psm-6/src/lib/config.ts",[],"/Users/hamboomger/work/uni/psm/psm-6/src/components/plotting/PhaseSpaceDataObservable.ts",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":11,"nodeType":"74","messageId":"75","endLine":9,"endColumn":16},{"ruleId":"72","severity":1,"message":"76","line":22,"column":10,"nodeType":"74","messageId":"75","endLine":22,"endColumn":23},{"ruleId":"72","severity":1,"message":"77","line":22,"column":25,"nodeType":"74","messageId":"75","endLine":22,"endColumn":41},{"ruleId":"72","severity":1,"message":"78","line":4,"column":31,"nodeType":"74","messageId":"75","endLine":4,"endColumn":47},{"ruleId":"79","severity":1,"message":"80","line":30,"column":6,"nodeType":"81","endLine":30,"endColumn":36,"suggestions":"82"},{"ruleId":"68","replacedBy":"83"},{"ruleId":"70","replacedBy":"84"},{"ruleId":"72","severity":1,"message":"85","line":3,"column":9,"nodeType":"74","messageId":"75","endLine":3,"endColumn":33},{"ruleId":"72","severity":1,"message":"86","line":3,"column":35,"nodeType":"74","messageId":"75","endLine":3,"endColumn":48},{"ruleId":"72","severity":1,"message":"87","line":77,"column":11,"nodeType":"74","messageId":"75","endLine":77,"endColumn":17},{"ruleId":"72","severity":1,"message":"88","line":78,"column":11,"nodeType":"74","messageId":"75","endLine":78,"endColumn":17},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"@typescript-eslint/no-unused-vars","'State' is defined but never used.","Identifier","unusedVar","'phaseSpaceSub' is assigned a value but never used.","'setPhaseSpaceSub' is assigned a value but never used.","'PhaseSpaceParams' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'params' and 'pivotCoords'. Either include them or remove the dependency array.","ArrayExpression",["91"],["89"],["90"],"'PhaseSpaceDataObservable' is defined but never used.","'PSDSubscriber' is defined but never used.","'xValue' is assigned a value but never used.","'yValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [animationStarted, params, pendCoords, pivotCoords]",{"range":"94","text":"95"},[1121,1151],"[animationStarted, params, pendCoords, pivotCoords]"]