[{"/Users/hamboomger/work/uni/psm/psm-6/src/index.tsx":"1","/Users/hamboomger/work/uni/psm/psm-6/src/reportWebVitals.ts":"2","/Users/hamboomger/work/uni/psm/psm-6/src/App.tsx":"3","/Users/hamboomger/work/uni/psm/psm-6/src/components/StartButton.tsx":"4","/Users/hamboomger/work/uni/psm/psm-6/src/lib/pendulumFunctions.ts":"5","/Users/hamboomger/work/uni/psm/psm-6/src/lib/AppState.ts":"6","/Users/hamboomger/work/uni/psm/psm-6/src/lib/config.ts":"7","/Users/hamboomger/work/uni/psm/psm-6/src/components/animation/Pendulum.tsx":"8","/Users/hamboomger/work/uni/psm/psm-6/src/components/plot/PhaseSpacePlot.tsx":"9","/Users/hamboomger/work/uni/psm/psm-6/src/lib/util.ts":"10","/Users/hamboomger/work/uni/psm/psm-6/src/components/plot/PhaseSpaceDataObservable.ts":"11","/Users/hamboomger/work/uni/psm/psm-6/src/components/plot/D3PlotBuilder.ts":"12"},{"size":528,"mtime":1611596060348,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1612116094332,"results":"15","hashOfConfig":"14"},{"size":794,"mtime":1612709418109,"results":"16","hashOfConfig":"14"},{"size":1327,"mtime":1612712205471,"results":"17","hashOfConfig":"14"},{"size":2132,"mtime":1612713122637,"results":"18","hashOfConfig":"14"},{"size":798,"mtime":1612713122658,"results":"19","hashOfConfig":"14"},{"size":86,"mtime":1612713122651,"results":"20","hashOfConfig":"14"},{"size":4328,"mtime":1612961189744,"results":"21","hashOfConfig":"14"},{"size":1981,"mtime":1612517536379,"results":"22","hashOfConfig":"14"},{"size":167,"mtime":1612711664041,"results":"23","hashOfConfig":"14"},{"size":1670,"mtime":1612517536476,"results":"24","hashOfConfig":"14"},{"size":3809,"mtime":1612517536448,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"nicvw5",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},"/Users/hamboomger/work/uni/psm/psm-6/src/index.tsx",[],["52","53"],"/Users/hamboomger/work/uni/psm/psm-6/src/reportWebVitals.ts",[],"/Users/hamboomger/work/uni/psm/psm-6/src/App.tsx",[],"/Users/hamboomger/work/uni/psm/psm-6/src/components/StartButton.tsx",[],"/Users/hamboomger/work/uni/psm/psm-6/src/lib/pendulumFunctions.ts",[],"/Users/hamboomger/work/uni/psm/psm-6/src/lib/AppState.ts",[],"/Users/hamboomger/work/uni/psm/psm-6/src/lib/config.ts",[],"/Users/hamboomger/work/uni/psm/psm-6/src/components/animation/Pendulum.tsx",["54","55"],"/Users/hamboomger/work/uni/psm/psm-6/src/components/plot/PhaseSpacePlot.tsx",[],"/Users/hamboomger/work/uni/psm/psm-6/src/lib/util.ts",[],"/Users/hamboomger/work/uni/psm/psm-6/src/components/plot/PhaseSpaceDataObservable.ts",[],"/Users/hamboomger/work/uni/psm/psm-6/src/components/plot/D3PlotBuilder.ts",["56","57","58","59"],"import * as d3 from \"d3\";\nimport './plot.css';\nimport {PhaseSpaceDataObservable, PSDSubscriber} from \"./PhaseSpaceDataObservable\";\nimport {PhaseSpace} from \"../../lib/pendulumFunctions\";\n\nexport type DataElem = { t: number, theta: number, dotTheta: number }\nexport type PlotData = Array<DataElem>;\n\nexport class D3PlotBuilder {\n  private padding = 20;\n  private width: number;\n  private height: number;\n  private innerWidth: number;\n  private innerHeight: number;\n\n  private readonly ref: SVGSVGElement;\n  private selection?: d3.Selection<SVGGElement, unknown, null, undefined>\n\n  constructor(width: number, height: number, svgRef: SVGSVGElement) {\n    this.width = width;\n    this.height = height;\n    this.ref = svgRef;\n\n    this.innerWidth = width - this.padding*2;\n    this.innerHeight = height - this.padding*2;\n  }\n\n  drawPlotLine(patchNumber: number, phaseSpace: PhaseSpace) {\n    const data: PlotData = phaseSpace.map(d => {\n      const [t, [theta, dotTheta]] = d;\n      return { t, theta, dotTheta };\n    });\n\n    const xValRangeRad = Math.PI / 2;\n    const yValRangeRad = Math.PI / 8;\n    const xValue = (d: DataElem) => d.theta;\n    const yValue = (d: DataElem) => d.dotTheta;\n\n    const xScale = d3.scaleLinear()\n      .domain([-xValRangeRad, xValRangeRad])\n      .range([0, this.innerWidth])\n      .nice();\n\n    const yScale = d3.scaleLinear()\n      .domain([-yValRangeRad, yValRangeRad])\n      .range([0, this.innerHeight])\n      .nice();\n\n    const lineGen = d3.line<DataElem>()\n      .x(d => xScale(xValue(d)))\n      .y(d => yScale(yValue(d)))\n      .curve(d3.curveNatural);\n\n    var path = this.selection!.append(\"path\")\n      .attr(\"d\", lineGen(data)!)\n      .attr(\"stroke\", \"darkgrey\")\n      .attr(\"stroke-width\", \"2\")\n      .attr(\"fill\", \"none\");\n\n    var totalLength = path.node()!.getTotalLength();\n\n    path\n      .attr(\"stroke-dasharray\", totalLength + \" \" + totalLength)\n      .attr(\"stroke-dashoffset\", totalLength)\n      // .attr('class', 'plot-line')\n      .transition()\n      .duration(1000)\n      .ease(d3.easeLinear)\n      .attr(\"stroke-dashoffset\", 1)\n  }\n\n  buildPlotPlane() {\n    const svg = d3.select(this.ref);\n\n    const xValRangeRad = Math.PI / 2;\n    const yValRangeRad = Math.PI / 8;\n    const xValue = (d: DataElem) => d.theta;\n    const yValue = (d: DataElem) => d.dotTheta;\n\n    const xScale = d3.scaleLinear()\n      .domain([-xValRangeRad, xValRangeRad])\n      .range([0, this.innerWidth])\n      .nice();\n\n    const yScale = d3.scaleLinear()\n      .domain([-yValRangeRad, yValRangeRad])\n      .range([0, this.innerHeight])\n      .nice();\n\n    this.selection = svg.append('g')\n      .attr('transform', `translate(${this.padding}, ${this.padding})`)\n\n    const xAxis = d3.axisBottom(xScale)\n      .tickSize(-this.innerHeight)\n      .tickFormat(formatToPi);\n\n    const yAxis = d3.axisLeft(yScale)\n      .tickSize(-this.innerWidth)\n      .tickFormat(formatToPi);\n\n    const yAxisG = this.selection.append('g').call(yAxis)\n      .attr('transform', `translate(${this.innerWidth / 2}, 0)`);\n\n    const xAxisG = this.selection.append('g').call(xAxis)\n      .attr('transform', `translate(0, ${this.innerHeight / 2})`);\n\n    yAxisG.append('text')\n      .attr('fill', 'black')\n      .attr('x', '45')\n      .attr('y', '5')\n      .text('theta dot');\n\n    yAxisG.selectAll(\".tick line\")\n      .attr('class', 'plot-tick')\n      .attr(\"x1\", (this.width - (2 * this.padding)) / 2 * -1)\n      .attr(\"x2\", (this.width - (2 * this.padding)) / 2);\n\n    xAxisG.selectAll(\".tick line\")\n      .attr('class', 'plot-tick')\n      .attr(\"y1\", (this.width - (2 * this.padding)) / 2 * -1)\n      .attr(\"y2\", (this.width - (2 * this.padding)) / 2);\n  }\n}\n\nfunction formatToPi(value: d3.NumberValue): string {\n  const valInPi = value.valueOf() / Math.PI;\n  return `${valInPi.toFixed(2)} \\u03c0`;\n}\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":5,"column":31,"nodeType":"66","messageId":"67","endLine":5,"endColumn":37},{"ruleId":"64","severity":1,"message":"68","line":64,"column":25,"nodeType":"66","messageId":"67","endLine":64,"endColumn":33},{"ruleId":"64","severity":1,"message":"69","line":3,"column":9,"nodeType":"66","messageId":"67","endLine":3,"endColumn":33},{"ruleId":"64","severity":1,"message":"70","line":3,"column":35,"nodeType":"66","messageId":"67","endLine":3,"endColumn":48},{"ruleId":"64","severity":1,"message":"71","line":77,"column":11,"nodeType":"66","messageId":"67","endLine":77,"endColumn":17},{"ruleId":"64","severity":1,"message":"72","line":78,"column":11,"nodeType":"66","messageId":"67","endLine":78,"endColumn":17},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'Vector' is defined but never used.","Identifier","unusedVar","'dotTheta' is assigned a value but never used.","'PhaseSpaceDataObservable' is defined but never used.","'PSDSubscriber' is defined but never used.","'xValue' is assigned a value but never used.","'yValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]